#
# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Official repository: https://github.com/boostorg/beast
#

sudo: false

language: cpp

addons:
  apt:
    sources: &base_sources
      - ubuntu-toolchain-r-test
    packages: &base_packages
      #- python-software-properties
      - software-properties-common
      - libffi-dev
      - libstdc++6
      - binutils-gold
      # Provides a backtrace if the unittests crash
      - gdb

matrix:
  include:
    # Documentation build
    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - docbook
            - docbook-xml
            - docbook-xsl
            - xsltproc
            - libsaxonhe-java
            - default-jre-headless
      install:
        - cd ..
        - mkdir tmp && cd tmp
        - git clone -b 'Release_1_8_15' --depth 1 https://github.com/doxygen/doxygen.git
        - cd doxygen
        - cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Release
        - cd build
        - sudo make install
        - cd ../..
        - wget -O saxonhe.zip https://sourceforge.net/projects/saxon/files/Saxon-HE/9.9/SaxonHE9-9-1-4J.zip/download
        - unzip saxonhe.zip
        - sudo rm /usr/share/java/Saxon-HE.jar
        - sudo cp saxon9he.jar /usr/share/java/Saxon-HE.jar
        - cd ..
        - BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
        - git clone -b $BOOST_BRANCH https://github.com/boostorg/boost.git boost-root
        - cd boost-root
        - git submodule update --init libs/context
        - git submodule update --init tools/boostbook
        - git submodule update --init tools/boostdep
        - git submodule update --init tools/docca
        - git submodule update --init tools/quickbook
        - cp -r $TRAVIS_BUILD_DIR/* libs/beast
        - python tools/boostdep/depinst/depinst.py ../tools/quickbook
        - ./bootstrap.sh
        - ./b2 headers
      script:
        - |-
          echo "using doxygen ; using boostbook ; using saxonhe ;" > ~/user-config.jam
        - ./b2 -j3 libs/beast/doc//boostrelease

    # GCC 6.0, Debug + Coverage
    - os: linux
      compiler: g++-6
      env:
        - VARIANT=beast_coverage
        - TOOLSET=gcc
        - COMPILER=g++-6
        - CXXSTD=14
      before_install:
        - pip install --user https://github.com/codecov/codecov-python/archive/master.zip
      addons:
        apt:
          packages:
            - g++-6
            - lcov
            - libssl-dev
            - *base_packages
          sources:
            - *base_sources

    # Default clang++ with libc++
    - os: linux
      compiler: clang++-libc++
      env:
        - VARIANT=debug
        - TOOLSET=clang
        - COMPILER=clang++-libc++
        - CXXSTD=11
        - CXX_FLAGS="<cxxflags>-stdlib=libc++ <linkflags>-stdlib=libc++"
      addons:
        apt:
          packages:
            - libc++-dev
            - libc++abi-dev

    # GCC Valgrind
    - os: linux
      dist: focal
      compiler: g++
      env:
        - VARIANT=beast_valgrind
        - TOOLSET=gcc
        - COMPILER=g++
        - CXXSTD=11
      addons:
        apt:
          packages:
            - g++-7
            - libssl-dev
            - valgrind
            - *base_packages
          sources:
            - *base_sources

    # Default g++
    - os: linux
      compiler: g++
      env:
        - VARIANT=release
        - TOOLSET=gcc
        - COMPILER=g++
        - CXXSTD=11

    # GCC 8, C++17, libstdc++, release
    - os: linux
      compiler: g++-8
      env:
        - VARIANT=release
        - TOOLSET=gcc
        - COMPILER=g++-8
        - CXXSTD=17
      addons:
        apt:
          packages:
            - g++-8
            - *base_packages
          sources:
            - *base_sources

    # Clang 3.8, UBasan
    - os: linux
      compiler: clang++-3.8
      env:
        - VARIANT=beast_ubasan
        - TOOLSET=clang
        - COMPILER=clang++-3.8
        - CXXSTD=11
        - UBSAN_OPTIONS='print_stacktrace=1'
        - PATH=$PWD/llvm-$LLVM_VERSION/bin:$PATH
      addons:
        apt:
          packages:
            - clang-3.8
            - libssl-dev
            - *base_packages
          sources:
            - llvm-toolchain-precise-3.8
            - *base_sources

    # OSX Clang, C++14, libc++, debug,
  # - if: branch != master
    - os: osx
      compiler: clang++
      env:
        - VARIANT=debug
        - TOOLSET=clang
        - COMPILER=clang++
        - CXXSTD=14
      before_install:
        - export OPENSSL_ROOT=$(brew --prefix openssl)

install:
  - cd ..
  - $TRAVIS_BUILD_DIR/tools/get-boost.sh $TRAVIS_BRANCH $TRAVIS_BUILD_DIR
  - cd boost-root
  - export PATH=$PATH:"`pwd`"
  - export BOOST_ROOT=$(pwd)
  - ./bootstrap.sh
  - cp libs/beast/tools/user-config.jam ~/user-config.jam
  - |-
    echo "using $TOOLSET : : $COMPILER : $CXX_FLAGS ;" >> ~/user-config.jam
script:
  - cd ../boost-root
  - libs/beast/tools/retry.sh libs/beast/tools/build-and-test.sh


after_script:
  - cat nohup.out || echo "nohup.out already deleted"

notifications:
  email:
    false
