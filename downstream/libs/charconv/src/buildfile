intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
#import xxxx_libs += libhello%lib{hello}

# Public headers.
#
pub = [dir_path] ../include/boost/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

lib{boost-charconv}: $pub/{$pub_hdrs}

# Private headers and sources as well as dependencies.
#
lib{boost-charconv}: {hxx ixx txx cxx}{**} $impl_libs $intf_libs

# Build options.
#
out_pfx_inc = [dir_path] $out_root/include/
src_pfx_inc = [dir_path] $src_root/include/
out_pfx_src = [dir_path] $out_root/src/
src_pfx_src = [dir_path] $src_root/src/

cxx.poptions =+ "-I$out_pfx_src" "-I$src_pfx_src" \
                "-I$out_pfx_inc" "-I$src_pfx_inc"


# BEGIN MANUAL CUSTOMIZATION
#

# Disable libquadmath (Linux only and no build2 package yet).
#
cxx.poptions += -DBOOST_CHARCONV_NO_QUADMATH

#
# END MANUAL CUSTOMIZATION

obja{*}: cxx.poptions += -DBOOST_STATIC_BUILD
objs{*}: cxx.poptions += -DBOOST_SHARED_BUILD

# Export options.
#
lib{boost-charconv}:
{
  cxx.export.poptions = "-I$out_pfx_inc" "-I$src_pfx_inc"

  # BEGIN MANUAL CUSTOMIZATION
  #

  # Disable libquadmath (Linux only and no build2 package yet).
  #
  cxx.export.poptions += -DBOOST_CHARCONV_NO_QUADMATH

  #
  # END MANUAL CUSTOMIZATION

  cxx.export.libs = $intf_libs
}

liba{boost-charconv}: cxx.export.poptions += -DBOOST_STATIC
libs{boost-charconv}: cxx.export.poptions += -DBOOST_SHARED

# For pre-releases use the complete version to make sure they cannot
# be used in place of another pre-release or the final version. See
# the version module for details on the version.* variable values.
#
if $version.pre_release
  lib{boost-charconv}: bin.lib.version = "-$version.project_id"
else
  lib{boost-charconv}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
{hxx ixx txx}{*}: install = false
